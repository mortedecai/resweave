#!/bin/bash

## Project script is intended to be the CLI inteface for manipulating / working with the resweave project as a developer.

## Variables

PROJECT_ROOT=`git rev-parse --show-toplevel`
PROJECT_NAME=`basename "$PROJECT_ROOT"`

# Note that this loads scripts/colors.sh for us
source $PROJECT_ROOT/scripts/log.sh

### EXIT CODES

STATUS_USAGE_USED=1

## Function: usage -> Print the usage message and exit with status code STATUS_USAGE_USED

usage() {
  echo "USAGE:  project <command>"
  echo
  echo "commands:"
  echo "  - $(color -bright -green coverage)"
  echo "  - $(color -bright -green lint)"
  echo "  - $(color -bright -green test)"
  echo
  echo "  - $(color -bright -green bump)"
  echo
  echo "  - help (this message)"
  echo
  echo "Help for commands can be found by: project command help"
  exit $STATUS_USAGE_USED
}

## Function: cmd_lint -> Run the lint script with necessary parameters
cmd_bump() {
  echo "$PROJECT_ROOT/scripts/bump.sh $PROJECT_ROOT $@"
  $PROJECT_ROOT/scripts/bump.sh -r $PROJECT_ROOT $@
}
## Function: cmd_lint -> Run the lint script with necessary parameters
cmd_lint() {
  $PROJECT_ROOT/scripts/lint.sh $PROJECT_ROOT $@
}
## Function: cmd_coverage -> Run the coverage script with necessary parameters
cmd_coverage() {
  $PROJECT_ROOT/scripts/coverage.sh $PROJECT_ROOT $@
}

## Function: cmd_test -> Run the test script with the remaining parameters
cmd_test() {
  $PROJECT_ROOT/scripts/test.sh $PROJECT_ROOT $@
}
## Start the script

clear

if [ $# == 0 ]; then
  usage
fi

CMD=$1
shift
case $CMD in
  bump)
    log_info_stage "Bumping resweave version"
    cmd_bump $@
    ;;
  coverage)
    log_info_stage "Generating Coverage" $PROJECT_NAME
    cmd_coverage $@
    ;;
  lint)
    log_info_stage "Linting" $PROJECT_NAME
    cmd_lint $@
    ;;
  test)
    log_info_stage "Testing" $PROJECT_NAME
    cmd_test $@
    ;;
  *)
    usage
    ;;
esac


